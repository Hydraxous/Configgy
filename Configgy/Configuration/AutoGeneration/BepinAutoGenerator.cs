using BepInEx.Bootstrap;
using System.Linq;
using System.Reflection;
using UnityEngine;

namespace Configgy.Configuration.AutoGeneration
{
    //A significant portion of this class was based off of AinaVT's work on the LethalConfig mod for Lethal Company
    internal static class BepinAutoGenerator
    {

        internal static bool built;

        internal static void Generate()
        {
            if (built)
                return;

            built = true;

            foreach (var plugin in Chainloader.PluginInfos.Values)
            {
                try
                {
                    var info = plugin.Metadata;
                    if (plugin.Instance == null)
                        continue;

                    var configs = plugin.Instance.Config.Select(c => c.Value);
                    var assembly = Assembly.GetAssembly(plugin.Instance.GetType());

                    if (!configs.Any())
                        continue;

                    string asmName = assembly.GetName().Name;
                    ConfigBuilder generatedBuilder = new ConfigBuilder("Configgy.Generated." + asmName.Replace(" ", ""), asmName);
                    generatedBuilder.owner = assembly;

                    foreach (var config in configs)
                        generatedBuilder.RegisterBepInExConfigEntry(config);

                    IConfigElement[] elements = generatedBuilder._configElements.ToArray();

                    ConfiggyPlugin.Log.Log($"Configgy: AutoGenerated {elements.Length} elements for {asmName}'s BepInEx config file.");

                    generatedBuilder.Rebuild();
                }catch (System.Exception e)
                {
                    ConfiggyPlugin.Log.LogError($"Configgy: Encountered error generating BepInEx config menus for {plugin.Metadata.Name}");
                    ConfiggyPlugin.Log.LogException(e);
                }
            }

        }
    }
}
